{"version":3,"file":"withIosSplashAssets.js","names":["_configPlugins","data","require","_imageUtils","_debug","_interopRequireDefault","_fsExtra","_jimpCompact","path","_interopRequireWildcard","_AssetContents","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","debug","Debug","IMAGE_CACHE_NAME","IMAGESET_PATH","PNG_FILENAME","DARK_PNG_FILENAME","TABLET_PNG_FILENAME","DARK_TABLET_PNG_FILENAME","withIosSplashAssets","config","splash","withDangerousMod","iosNamedProjectRoot","IOSConfig","Paths","getSourceRoot","modRequest","projectRoot","configureImageAssets","image","darkImage","dark","tabletImage","darkTabletImage","logoWidth","exports","imageSetPath","resolve","fs","remove","writeContentsJsonFileAsync","assetPath","copyImageFiles","logo","Jimp","read","Promise","all","ratio","suffix","map","filePath","size","height","Math","ceil","bitmap","width","clone","resize","writeAsync","generateImagesAssetsAsync","generateImageAsset","item","fileName","source","generateImageAsync","cacheType","src","writeFile","anyItem","darkItem","tabletItem","darkTabletItem","items","filter","darkAppearances","appearance","value","buildContentsJsonImages","createContentsJsonItem","idiom","filename","scale","appearances","undefined","Boolean","images","writeContentsJsonAsync"],"sources":["../../../../src/plugins/unversioned/expo-splash-screen/withIosSplashAssets.ts"],"sourcesContent":["import { ConfigPlugin, IOSConfig, withDangerousMod } from '@expo/config-plugins';\nimport { generateImageAsync } from '@expo/image-utils';\nimport Debug from 'debug';\nimport fs from 'fs-extra';\n// @ts-ignore\nimport Jimp from 'jimp-compact';\nimport * as path from 'path';\n\nimport { IOSPluginConfig } from './getIosSplashConfig';\nimport {\n  ContentsJsonImage,\n  ContentsJsonImageAppearance,\n  createContentsJsonItem,\n  writeContentsJsonAsync,\n} from '../../icons/AssetContents';\n\nconst debug = Debug('expo:prebuild-config:expo-splash-screen:ios:assets');\n\nconst IMAGE_CACHE_NAME = 'splash-ios';\nconst IMAGESET_PATH = 'Images.xcassets/SplashScreen.imageset';\nconst PNG_FILENAME = 'image';\nconst DARK_PNG_FILENAME = 'dark_image';\nconst TABLET_PNG_FILENAME = 'tablet_image';\nconst DARK_TABLET_PNG_FILENAME = 'dark_tablet_image';\n\nexport const withIosSplashAssets: ConfigPlugin<IOSPluginConfig> = (config, splash) => {\n  if (!splash) {\n    return config;\n  }\n  return withDangerousMod(config, [\n    'ios',\n    async (config) => {\n      const iosNamedProjectRoot = IOSConfig.Paths.getSourceRoot(config.modRequest.projectRoot);\n\n      await configureImageAssets({\n        projectRoot: config.modRequest.projectRoot,\n        iosNamedProjectRoot,\n        image: splash.image,\n        darkImage: splash.dark?.image,\n        tabletImage: splash.tabletImage,\n        darkTabletImage: splash.dark?.tabletImage,\n        logoWidth: splash.logoWidth ?? 100,\n      });\n\n      return config;\n    },\n  ]);\n};\n\n/**\n * Creates imageset containing image for Splash/Launch Screen.\n */\nasync function configureImageAssets({\n  projectRoot,\n  iosNamedProjectRoot,\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n  logoWidth,\n}: {\n  projectRoot: string;\n  iosNamedProjectRoot: string;\n  image?: string | null;\n  darkImage?: string | null;\n  tabletImage: string | null;\n  darkTabletImage?: string | null;\n  logoWidth: number;\n}) {\n  const imageSetPath = path.resolve(iosNamedProjectRoot, IMAGESET_PATH);\n\n  // ensure old SplashScreen imageSet is removed\n  await fs.remove(imageSetPath);\n\n  if (!image) {\n    return;\n  }\n\n  await writeContentsJsonFileAsync({\n    assetPath: imageSetPath,\n    image: PNG_FILENAME,\n    darkImage: darkImage ? DARK_PNG_FILENAME : null,\n    tabletImage: tabletImage ? TABLET_PNG_FILENAME : null,\n    darkTabletImage: darkTabletImage ? DARK_TABLET_PNG_FILENAME : null,\n  });\n\n  await copyImageFiles({\n    projectRoot,\n    iosNamedProjectRoot,\n    image,\n    darkImage,\n    tabletImage,\n    darkTabletImage,\n    logoWidth,\n  });\n}\n\nasync function copyImageFiles({\n  projectRoot,\n  iosNamedProjectRoot,\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n  logoWidth,\n}: {\n  projectRoot: string;\n  iosNamedProjectRoot: string;\n  image: string;\n  darkImage?: string | null;\n  tabletImage?: string | null;\n  darkTabletImage?: string | null;\n  logoWidth: number;\n}) {\n  const logo = await Jimp.read(image);\n\n  await Promise.all(\n    [\n      { ratio: 1, suffix: '' },\n      { ratio: 2, suffix: '@2x' },\n      { ratio: 3, suffix: '@3x' },\n    ].map(({ ratio, suffix }) => {\n      const filePath = path.resolve(\n        iosNamedProjectRoot,\n        IMAGESET_PATH,\n        `${PNG_FILENAME}${suffix}.png`\n      );\n\n      const size = logoWidth * ratio;\n      const height = Math.ceil(size * (logo.bitmap.height / logo.bitmap.width));\n      return logo.clone().resize(size, height).writeAsync(filePath);\n    })\n  );\n\n  await generateImagesAssetsAsync({\n    async generateImageAsset(item, fileName) {\n      // Using this method will cache the images in `.expo` based on the properties used to generate them.\n      // this method also supports remote URLs and using the global sharp instance.\n      const { source } = await generateImageAsync({ projectRoot, cacheType: IMAGE_CACHE_NAME }, {\n        src: item,\n      } as any);\n      // Write image buffer to the file system.\n      // const assetPath = join(iosNamedProjectRoot, IMAGESET_PATH, filename);\n      await fs.writeFile(path.resolve(iosNamedProjectRoot, IMAGESET_PATH, fileName), source);\n    },\n    anyItem: image,\n    darkItem: darkImage,\n    tabletItem: tabletImage,\n    darkTabletItem: darkTabletImage,\n  });\n}\n\nasync function generateImagesAssetsAsync({\n  generateImageAsset,\n  anyItem,\n  darkItem,\n  tabletItem,\n  darkTabletItem,\n}: {\n  generateImageAsset: (item: string, fileName: string) => Promise<void>;\n  anyItem: string;\n  darkItem?: string | null;\n  tabletItem?: string | null;\n  darkTabletItem?: string | null;\n}) {\n  const items = [\n    [anyItem, PNG_FILENAME],\n    [darkItem, DARK_PNG_FILENAME],\n    [tabletItem, TABLET_PNG_FILENAME],\n    [darkTabletItem, DARK_TABLET_PNG_FILENAME],\n  ].filter(([item]) => !!item) as unknown as [string, string];\n\n  await Promise.all(items.map(([item, fileName]) => generateImageAsset(item, fileName)));\n}\n\nconst darkAppearances: ContentsJsonImageAppearance[] = [\n  {\n    appearance: 'luminosity',\n    value: 'dark',\n  } as ContentsJsonImageAppearance,\n];\n\nexport function buildContentsJsonImages({\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n}: {\n  image: string;\n  tabletImage: string | null;\n  darkImage: string | null;\n  darkTabletImage: string | null;\n}): ContentsJsonImage[] {\n  return [\n    // Phone light\n    createContentsJsonItem({\n      idiom: 'universal',\n      filename: `${image}.png`,\n      scale: '1x',\n    }),\n    createContentsJsonItem({\n      idiom: 'universal',\n      filename: `${image}@2x.png`,\n      scale: '2x',\n    }),\n    createContentsJsonItem({\n      idiom: 'universal',\n      filename: `${image}@3x.png`,\n      scale: '3x',\n    }),\n    // Phone dark\n    darkImage &&\n      createContentsJsonItem({\n        idiom: 'universal',\n        appearances: darkAppearances,\n        filename: darkImage,\n        scale: '1x',\n      }),\n    darkImage &&\n      createContentsJsonItem({\n        idiom: 'universal',\n        appearances: darkAppearances,\n        scale: '2x',\n      }),\n    darkImage &&\n      createContentsJsonItem({\n        idiom: 'universal',\n        appearances: darkAppearances,\n        scale: '3x',\n      }),\n    // Tablet light\n    tabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        filename: tabletImage,\n        scale: '1x',\n      }),\n    tabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        scale: '2x',\n      }),\n    // Phone dark\n    darkTabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        appearances: darkAppearances,\n        filename: darkTabletImage ?? undefined,\n        scale: '1x',\n      }),\n    darkTabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        appearances: darkAppearances,\n        scale: '2x',\n      }),\n  ].filter(Boolean) as ContentsJsonImage[];\n}\n\nasync function writeContentsJsonFileAsync({\n  assetPath,\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n}: {\n  assetPath: string;\n  image: string;\n  darkImage: string | null;\n  tabletImage: string | null;\n  darkTabletImage: string | null;\n}) {\n  const images = buildContentsJsonImages({ image, darkImage, tabletImage, darkTabletImage });\n\n  debug(`create contents.json:`, assetPath);\n  debug(`use images:`, images);\n  await writeContentsJsonAsync(assetPath, { images });\n}\n"],"mappings":"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"}
